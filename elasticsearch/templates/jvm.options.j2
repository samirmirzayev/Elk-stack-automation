################################################################
##
## JVM configuration
##
################################################################
##
## WARNING: DO NOT EDIT THIS FILE. If you want to override the
## JVM options in this file, or set any additional options, you
## should create one or more files in the jvm.options.d
## directory containing your adjustments.
##
## See https://www.elastic.co/guide/en/elasticsearch/reference/{{ elasticsearch_major_version }}.0/jvm-options.html
## for more information.
##
################################################################

################################################################
## IMPORTANT: JVM heap size
################################################################
##
## The heap size is automatically configured by Elasticsearch
## based on the available memory in your system and the roles
## each node is configured to fulfill. If specifying heap is
## required, it should be done through a file in jvm.options.d,
## which should be named with .options suffix, and the min and
## max should be set to the same value. For example, to set the
## heap to 4 GB, create a new file in the jvm.options.d
## directory containing these lines:
##
## -Xms4g
## -Xmx4g
##
## See https://www.elastic.co/guide/en/elasticsearch/reference/{{ elasticsearch_major_version }}.0/heap-size.html
## for more information
##
################################################################

-Xms{{ hostvars[inventory_hostname].elasticsearch_jvm_xms | default(elasticsearch_jvm_xms) }}
-Xmx{{ hostvars[inventory_hostname].elasticsearch_jvm_xmx | default(elasticsearch_jvm_xmx) }}

################################################################
## Expert settings
################################################################
##
## All settings below here are considered expert settings. Do
## not adjust them unless you understand what you are doing. Do
## not edit them in this file; instead, create a new file in the
## jvm.options.d directory containing your adjustments.
##
################################################################

{% if elasticsearch_major_version == '9' %}
## G1GC Configuration - Elasticsearch 9 uses G1GC by default
-XX:+UseG1GC
-XX:G1ReservePercent=25
-XX:InitiatingHeapOccupancyPercent=30
{% elif elasticsearch_major_version == '8' %}
## GC configuration
8-13:-XX:+UseConcMarkSweepGC
8-13:-XX:CMSInitiatingOccupancyFraction=75
8-13:-XX:+UseCMSInitiatingOccupancyOnly

## G1GC Configuration
14-:-XX:+UseG1GC
14-:-XX:G1ReservePercent=25
14-:-XX:InitiatingHeapOccupancyPercent=30
{% endif %}

## JVM temporary directory
-Djava.io.tmpdir=${ES_TMPDIR}

## heap dumps

# generate a heap dump when an allocation from the Java heap fails; heap dumps
# are created in the working directory of the JVM unless an alternative path is
# specified
-XX:+HeapDumpOnOutOfMemoryError

# exit right after heap dump on out of memory error.
-XX:+ExitOnOutOfMemoryError

# specify an alternative path for heap dumps; ensure the directory exists and
# has sufficient space
-XX:HeapDumpPath=/var/lib/elasticsearch

# specify an alternative path for JVM fatal error logs
-XX:ErrorFile=/var/log/elasticsearch/hs_err_pid%p.log

{% if elasticsearch_major_version == '9' %}
## GC logging - improved logging configuration for Elasticsearch 9
-Xlog:gc*,gc+age=trace,safepoint:file=/var/log/elasticsearch/gc.log:utctime,pid,tags:filecount=32,filesize=64m
{% elif elasticsearch_major_version == '8' %}
## GC logging
8-13:-Xloggc:/var/log/elasticsearch/gc.log
8-13:-XX:+PrintGCDetails
8-13:-XX:+PrintGCDateStamps
8-13:-XX:+PrintTenuringDistribution
8-13:-XX:+PrintGCApplicationStoppedTime
8-13:-XX:+UseGCLogFileRotation
8-13:-XX:NumberOfGCLogFiles=32
8-13:-XX:GCLogFileSize=64m

# JDK 9+ GC logging
14-:-Xlog:gc*,gc+age=trace,safepoint:file=/var/log/elasticsearch/gc.log:utctime,pid,tags:filecount=32,filesize=64m
{% endif %}

## Add JVM flight recorder options
{% if elasticsearch_jfr_enabled | default(false) %}
-XX:+FlightRecorder
-XX:FlightRecorderOptions=disk=true,maxsize=1g,maxage=3d
{% endif %}
